15
{"last_modification_time":1569464006,"language":1,"import_file":"/Users/raffonen/Documents/2019-2020 901J/src/auton_function.cpp","args":["clang++","-working-directory=/Users/josephwildman/Documents/GitHub/901J-TT-Repo","-target","armv7ar-none-none-eabi","-isystem/usr/local/Cellar/arm-gcc-bin/8-2018-q4-major/bin/../lib/gcc/arm-none-eabi/8.2.1/../../../../arm-none-eabi/include/c++/8.2.1","-isystem/usr/local/Cellar/arm-gcc-bin/8-2018-q4-major/bin/../lib/gcc/arm-none-eabi/8.2.1/../../../../arm-none-eabi/include/c++/8.2.1/arm-none-eabi/thumb/v7+fp/softfp","-isystem/usr/local/Cellar/arm-gcc-bin/8-2018-q4-major/bin/../lib/gcc/arm-none-eabi/8.2.1/../../../../arm-none-eabi/include/c++/8.2.1/backward","-isystem/usr/local/Cellar/arm-gcc-bin/8-2018-q4-major/bin/../lib/gcc/arm-none-eabi/8.2.1/include","-isystem/usr/local/Cellar/arm-gcc-bin/8-2018-q4-major/bin/../lib/gcc/arm-none-eabi/8.2.1/include-fixed","-isystem/usr/local/Cellar/arm-gcc-bin/8-2018-q4-major/bin/../lib/gcc/arm-none-eabi/8.2.1/../../../../arm-none-eabi/include","-iquote./include","-iquote./include/./","-mcpu=cortex-a9","-mfpu=neon-fp16","-mfloat-abi=softfp","-D_POSIX_THREADS","-D_UNIX98_THREAD_MUTEX_ATTRIBUTES","-Os","-funwind-tables","-ffunction-sections","-fdata-sections","-fdiagnostics-color","--std=gnu++17","/Users/raffonen/Documents/2019-2020 901J/src/auton_function.cpp","-resource-dir=/usr/local/Cellar/llvm/6.0.1/lib/clang/6.0.1","-Wno-unknown-warning-option","-fparse-all-comments","-isystem/Library/Developer/CommandLineTools/usr/include/c++/v1","-isystem/usr/local/include","-isystem/Library/Developer/CommandLineTools/usr/lib/clang/10.0.0/include","-isystem/Library/Developer/CommandLineTools/usr/include","-isystem/usr/include","-iframework/System/Library/Frameworks","-iframework/Library/Frameworks"],"includes":[{"line":1,"resolved_path":"/Users/raffonen/Documents/2019-2020 901J/src/config.hpp"},{"line":2,"resolved_path":"/Users/raffonen/Documents/2019-2020 901J/src/auton_function.h"}],"dependencies":["/Users/raffonen/Documents/2019-2020 901J/src/config.hpp"],"skipped_by_preprocessor":[],"types":[{"id":0,"usr":17,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[0,1,2,3,4],"uses":[]}],"funcs":[{"id":0,"usr":12991116207794106698,"detailed_name":"void slewRateControl(int *motor, int targetVelocity, int increment)","short_name_offset":5,"short_name_size":15,"kind":12,"storage":1,"hover":"","comments":"\nvoid liftpid(int targetDegree, int maxvel){\nleft_lift.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);\nright_lift.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);\nconst double degreeGoal = (targetDegree*LIFTGEARRATIO);\n\nbool goalMet = false;\nint targetVelocity = 0;\ndouble currentPosition = 0;\ndouble followPosition = 0;\ndouble error = 0;\ndouble previous_error = degreeGoal;\ndouble kP = 0.8;\ndouble kI = 0.0025;\ndouble kD = 0.001;\ndouble diff = 0;\ndouble integral = 0;\ndouble derivative = 0;\nif (targetDegree < 0) {maxvel *= -1;}\nright_lift.tare_position();\nleft_lift.tare_position();\n\n\nwhile(!goalMet){\n  currentPosition = left_lift.get_positon();\n  followPosition = right_lift.get_position();\n  diff = currentPosition - followPosition;\n  error = degreeGoal - currentPosition;\n\n  if (std::abs(error) < 100){\n    integral += error;\n  }\n\n  derivative = error - previous_error;\n  previous_error = error;\n\n  targetVelocity = kP*error + kI*integral + kD*derivative;\n\n  if (targetVelocity > maxVelocity){\n    targetVelocity = maxVelocity;\n  }\n\n  left_lift.move_velocity(targetVelocity);\n  right_lift.move_velocity(targetVelocity + diff);\n\n  if (std::abs(error) < 4){\n    goalMet = true;\n}\n\npros::delay(10);\n}\nright_lift.move_velocity(0);\nleft_lift.move_velocity(0);\n}","declarations":[],"spell":"62:6-62:21|-1|1|2","extent":"62:1-79:2|-1|1|0","bases":[],"derived":[],"vars":[1,2,3,4],"uses":[],"callees":[]}],"vars":[{"id":0,"usr":10589694442197299677,"detailed_name":"const int LIFTGEARRATIO","short_name_offset":10,"short_name_size":13,"hover":"const int LIFTGEARRATIO = 7","comments":"","declarations":[],"spell":"5:11-5:24|-1|1|2","extent":"5:1-5:28|-1|1|0","type":0,"uses":[],"kind":13,"storage":1},{"id":1,"usr":12692003994079645096,"detailed_name":"int *motor","short_name_offset":5,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"62:35-62:40|0|3|2","extent":"62:22-62:40|0|3|0","type":0,"uses":[],"kind":253,"storage":1},{"id":2,"usr":1646622120644781504,"detailed_name":"int targetVelocity","short_name_offset":4,"short_name_size":14,"hover":"","comments":"","declarations":[],"spell":"62:46-62:60|0|3|2","extent":"62:42-62:60|0|3|0","type":0,"uses":["64:7-64:21|0|3|4","65:28-65:42|0|3|4","66:11-66:25|0|3|4","68:18-68:32|0|3|4","72:27-72:41|0|3|4","76:23-76:37|0|3|4"],"kind":253,"storage":1},{"id":3,"usr":1180997478807118776,"detailed_name":"int increment","short_name_offset":4,"short_name_size":9,"hover":"","comments":"","declarations":[],"spell":"62:66-62:75|0|3|2","extent":"62:62-62:75|0|3|0","type":0,"uses":["67:28-67:37|0|3|4","69:28-69:37|0|3|4"],"kind":253,"storage":1},{"id":4,"usr":7163238669929933278,"detailed_name":"int currentVelocity","short_name_offset":4,"short_name_size":15,"hover":"","comments":"","declarations":[],"spell":"63:7-63:22|0|3|2","extent":"63:3-63:22|0|3|0","type":0,"uses":["65:9-65:24|0|3|4","66:28-66:43|0|3|4","67:9-67:24|0|3|4","68:35-68:50|0|3|4","69:9-69:24|0|3|4","72:9-72:24|0|3|4","76:5-76:20|0|3|4"],"kind":13,"storage":1}]}